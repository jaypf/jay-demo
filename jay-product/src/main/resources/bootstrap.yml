server:
  port: 9290

spring:
  application:
    name: jay-product
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    bus:
      refresh:
        enabled: true
      trace:
        enabled: true
    config:
      discovery:
        enabled: true
        service-id: jay-config
      fail-fast: true
      label: master
      profile: com.demo.test
      retry:
        max-attempts: 6
        max-interval: 2000
        multiplier: 1000
eureka:
  client:
    #是否注册到eureka
    fetchRegistry: true
    #是否从eureka中拉取注册信息
    registerWithEureka: true
    ##暴露eureka服务的地址
    serviceUrl:
      defaultZone: http://admin:admin@localhost:9090/eureka/
    #表示eureka client间隔多久去拉取服务注册信息，默认为30秒
    registry-fetch-interval-seconds: 30
    #健康检测
#    healthcheck:
#      enabled: true
  instance:
    #服务续约，心跳的时间间隔  单位 s
    lease-renewal-interval-in-seconds: 30
    #如果从前一次发送心跳时间起，90秒没接受到新的心跳，讲剔除服务
    lease-expiration-duration-in-seconds: 90

feign:
  hystrix:
    enabled: true

hystrix:
  command:
    #全局超时时间(<commandKey>作为前缀,默认是采用Feign的客户端的方法名字作为标识,defaul可以改为具体的@HystrixCommand中commandKey)
    #断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000

ribbon:
  eureka:
    enabled: true
  #单位ms ,请求连接超时时间
  ConnectTimeout: 1000
  #单位ms ,请求处理的超时时间
  ReadTimeout: 3000
  #是否对所有操作请求都进行重试，关闭时需要将spring.cloud.loadbalancer.retry.enabled=false
  OkToRetryOnAllOperations: true
  #切换实例的重试次数
  MaxAutoRetriesNextServer: 1
  #对当前实例的重试次数(当Eureka中可以找到当前服务，但是服务连不上时将会重试)
  MaxAutoRetries: 0
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
  #ping，可配置为新实现类
  NFLoadBalancerPingClassName: com.netflix.loadbalancer.PingUrl
  #ping间隔，可配置为新实现类
  #NFLoadBalancerPingInterval: 2