server:
  port: 9190

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: jay-web
  cloud:
    #开启ribbon重试是true，关闭时需要设置为false
    loadbalancer:
      retry:
        enabled: true
    config:
      label: master
      profile: dev
      #这种配置是configserver还单机情况，直接连接这个单机服务就行
      uri: http://localhost:9890/
      #configserver高可用配置
      #开启configserver服务发现功能
      #spring.cloud.config.discovery.enabled=true
      #服务发现的服务名称
      #spring.cloud.config.discovery.service-id=jay-config
      #如果连接不上获取配置有问题，快速响应失败
      fail-fast: true
      retry:
        #最大重试次数，默认6次
        max-attempts: 6
        #最大间隔时间，最大2000ms
        max-interval: 2000
        #默认重试的间隔时间，默认1000ms
        multiplier: 1000
        #下一间隔时间的乘数，默认是1.1
        #initial-interval: 1.1

eureka:
  instance:
    hostname: localhost
    #服务续约，心跳的时间间隔
    lease-renewal-interval-in-seconds: 30
    #如果从前一次发送心跳时间起，90秒没接受到新的心跳，讲剔除服务
    lease-expiration-duration-in-seconds: 90
  client:
    #是否注册到eureka
    fetchRegistry: true
    #是否从eureka中拉取注册信息
    registerWithEureka: true
    ##暴露eureka服务的地址
    serviceUrl:
      defaultZone: http://admin:admin@${eureka.instance.hostname}:9090/eureka/
    #表示eureka client间隔多久去拉取服务注册信息，默认为30秒
    registry-fetch-interval-seconds: 30
    #健康检测
    healthcheck:
      enabled: true

feign:
  #feign开启熔断器
  hystrix:
    enabled: true
    #开启feign的压缩功能
  compression:
    request:
      enabled: true
    response:
      enabled: true

hystrix:
  command:
    #全局超时时间(<commandKey>作为前缀,默认是采用Feign的客户端的方法名字作为标识,defaul可以改为具体的@HystrixCommand中commandKey)
    #断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试(当大于ribbon超时时间时短路时间将以hystrix为准)。
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000
#jay-product:
#  ribbon:
#    ConnectTimeout: 1000
#    MaxAutoRetries: 0
#    MaxAutoRetriesNextServer: 0
#    #NFLoadBalancerPingClassName: com.netflix.loadbalancer.PingUrl
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#    OkToRetryOnAllOperations: false
#    ReadTimeout: 3000
#    eureka:
#      enabled: true
#ribbon:
#  eureka:
#    enabled: true

ribbon:
  eureka:
    enabled: true
  #单位ms ,请求连接超时时间
  ConnectTimeout: 1000
  #单位ms ,请求处理的超时时间
  ReadTimeout: 3000
  #是否对所有操作请求都进行重试，关闭时需要将spring.cloud.loadbalancer.retry.enabled=false,如果要重试，需要注意被调用方的幂等设计
  OkToRetryOnAllOperations: false
  #切换实例的重试次数
  MaxAutoRetriesNextServer: 0
  #对当前实例的重试次数(当Eureka中可以找到当前服务，但是服务连不上时将会重试)
  MaxAutoRetries: 0
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
  #ping，可配置为新实现类
  NFLoadBalancerPingClassName: com.netflix.loadbalancer.PingUrl
  #ping间隔，可配置为新实现类
  #NFLoadBalancerPingInterval: 2

management:
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'

#====================business config ↓===========================
product:
  serverName1: jay-product
#====================business config ↑===========================